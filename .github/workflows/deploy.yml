name: Build & Deploy to S3 + CloudFront

permissions:
  contents: write

on:
  push:
    branches: [prod]
  pull_request_target:
    branches: [prod]
    types: [closed]

jobs:
  build-and-deploy:
    if: >
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/prod' && !contains(github.event.head_commit.message, 'Merge pull request'))
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        env:
          VITE_PRODUCT:  ${{ vars.VITE_PRODUCT }}
          VITE_PLANNING: ${{ vars.VITE_PLANNING }}
          VITE_WORKERS: ${{ vars.VITE_WORKERS }}
          VITE_USERS: ${{ vars.VITE_USERS }}
          VITE_INVENTORY: ${{ vars.VITE_INVENTORY }}
          VITE_TICKET: ${{ vars.VITE_TICKET }}
          VITE_COMMON: ${{ vars.VITE_COMMON }}
          VITE_QC: ${{ vars.VITE_QC }}
          VITE_CASTING: ${{ vars.VITE_CASTING }}
          VITE_PAINTING: ${{ vars.VITE_PAINTING }}
          VITE_NOTIFICATIONS: ${{ vars.VITE_NOTIFICATIONS }}
          VITE_PRODUCT_BEARER_TOKEN_KEY: ${{ vars.VITE_PRODUCT_BEARER_TOKEN_KEY }}
          VITE_WORKERS_BEARER_TOKEN_KEY: ${{ vars.VITE_WORKERS_BEARER_TOKEN_KEY }}
          VITE_PLANNING_BEARER_TOKEN_KEY: ${{ vars.VITE_PLANNING_BEARER_TOKEN_KEY }}
          VITE_QC_BEARER_TOKEN_KEY: ${{ vars.VITE_QC_BEARER_TOKEN_KEY }}
          VITE_INVENTORY_BEARER_TOKEN_KEY: ${{ vars.VITE_INVENTORY_BEARER_TOKEN_KEY }}
          VITE_NOTIFICATIONS_BEARER_TOKEN_KEY: ${{ vars.VITE_NOTIFICATIONS_BEARER_TOKEN_KEY }}
          VITE_COMMON_BEARER_TOKEN_KEY: ${{ vars.VITE_COMMON_BEARER_TOKEN_KEY }}
          VITE_CASTING_BEARER_TOKEN_KEY: ${{ vars.VITE_CASTING_BEARER_TOKEN_KEY }}
          VITE_PAINTING_BEARER_TOKEN_KEY: ${{ vars.VITE_PAINTING_BEARER_TOKEN_KEY }}
          VITE_S3_ENDPOINT: ${{ vars.VITE_S3_ENDPOINT }}
          VITE_ABLY_PUBLIC_KEY: ${{ vars.VITE_ABLY_PUBLIC_KEY }}
          VITE_DEV_TEAM_EMAIL: ${{ vars.VITE_DEV_TEAM_EMAIL }}
          VITE_PRODUCTS_KEY: ${{ vars.VITE_PRODUCTS_KEY }}
          VITE_TASK_HISTORY_KEY: ${{ vars.VITE_TASK_HISTORY_KEY }}
          VITE_WIP_KEY: ${{ vars.VITE_WIP_KEY }}
          VITE_QC_KEY: ${{ vars.VITE_QC_KEY }}
          VITE_QC_KPI_KEY: ${{ vars.VITE_QC_KPI_KEY }}
          VITE_WORKERS_KEY: ${{ vars.VITE_WORKERS_KEY }}
          VITE_WORKER_DEPARTMENTS_KEY: ${{ vars.VITE_WORKER_DEPARTMENTS_KEY }}
          VITE_PLANNING_CALENDAR_KEY: ${{ vars.VITE_PLANNING_CALENDAR_KEY }}
          VITE_PLANNING_KEY: ${{ vars.VITE_PLANNING_KEY }}
          VITE_USERS_KEY: ${{ vars.VITE_USERS_KEY }}
          VITE_USERS_PERMISSION_KEY: ${{ vars.VITE_USERS_PERMISSION_KEY }}
          VITE_OUTPUT_POSTING_KEY: ${{ vars.VITE_OUTPUT_POSTING_KEY }}
          VITE_INVENTORY_KEY: ${{ vars.VITE_INVENTORY_KEY }}
          VITE_TICKET_KEY: ${{ vars.VITE_TICKET_KEY }}
          VITE_TICKET_CREATE_KEY: ${{ vars.VITE_TICKET_CREATE_KEY }}
          VITE_TICKET_SHOW_KEY: ${{ vars.VITE_TICKET_SHOW_KEY }}
          VITE_TICKET_UPDATE_KEY: ${{ vars.VITE_TICKET_UPDATE_KEY }}
          VITE_TICKET_CHANGE_STATUS_KEY: ${{ vars.VITE_TICKET_CHANGE_STATUS_KEY }}
          VITE_TICKET_TYPE_SHOW_KEY: ${{ vars.VITE_TICKET_TYPE_SHOW_KEY }}
          VITE_TICKET_TYPE_CREATE_KEY: ${{ vars.VITE_TICKET_TYPE_CREATE_KEY }}
          VITE_TICKET_TYPE_UPDATE_KEY: ${{ vars.VITE_TICKET_TYPE_UPDATE_KEY }}
          VITE_TICKET_TYPE_DELETE_KEY: ${{ vars.VITE_TICKET_TYPE_DELETE_KEY }}
          VITE_PROD_TAG_FIXED_WORK_CENTER: ${{ vars.VITE_PROD_TAG_FIXED_WORK_CENTER }}
          VITE_PRINT_PROD_TAG_KEY: ${{ vars.VITE_PRINT_PROD_TAG_KEY }}
          VITE_TICKET_ENC_ACCESS_KEY: ${{ vars.VITE_TICKET_ENC_ACCESS_KEY }}
          VITE_TICKET_ENC_ID: ${{ vars.VITE_TICKET_ENC_ID }}
          VITE_TICKET_TAG_ACCESS_KEY: ${{ vars.VITE_TICKET_TAG_ACCESS_KEY }}
          VITE_TICKET_TAG_ID: ${{ vars.VITE_TICKET_TAG_ID }}
          VITE_SUPERADMIN_IDS: ${{ vars.VITE_SUPERADMIN_IDS }}

        run: npm run build

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Sync files to S3
        run: |
          aws s3 sync dist/ s3://tms-vue-app --delete

      - name: Invalidate CloudFront index
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_ID }} --paths "/*"

      - name: Determine release tag and title
        id: release_vars
        run: |
          # default fallback
          TAG="Production"
          TITLE="Prod Deployment - ${GITHUB_RUN_NUMBER} (${GITHUB_SHA::7})"

          if [ -f package.json ]; then
            # try to read version from package.json
            VER=$(node -e "try{const p=require('./package.json'); console.log(p.version||'')}catch(e){console.log('')}")
            if [ -n "$VER" ]; then
              TAG="v$VER"
              TITLE="Version $VER"
            fi
          fi

          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
          echo "release_title=$TITLE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release (via github-script)
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = process.env.TAG_NAME || `${{ steps.release_vars.outputs.tag_name }}`;
            const title = process.env.RELEASE_TITLE || `${{ steps.release_vars.outputs.release_title }}`;
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: title,
              generate_release_notes: true,
              draft: false,
              prerelease: false,
              target_commitish: process.env.GITHUB_SHA || context.sha
            });
        env:
          TAG_NAME: ${{ steps.release_vars.outputs.tag_name }}
          RELEASE_TITLE: ${{ steps.release_vars.outputs.release_title }}
